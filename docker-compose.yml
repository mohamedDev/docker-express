version: "3"
services:
  web:
    image: node${NODEJS}expressjs
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NODE_VERSION=${NODEJS}
        - HTTP_PORT=${HTTP_CONTAINER}
        - HTTPS_PORT=${HTTPS_CONTAINER}
    container_name: ${APP_CONTAINER_NAME}
    ports:
      - "${HTTP_LOCAL}:${HTTP_CONTAINER}"
      - "${HTTPS_LOCAL}:${HTTPS_CONTAINER}"
    volumes:
      - ./:/app
      - /usr/src/app/node_modules
    depends_on:
      - mongo
    networks:
      meanstack_net:
        ipv4_address: 172.22.1.2
    tty: true

  mongo-express:
    image: mongo-express
    restart: always
    container_name: ${DB_CONTAINER_NAME}
    ports:
      - "${MONGO_EXPRESS_LOCAL}:${MONGO_EXPRESS_CONTAINER}"
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USER}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD}
      ME_CONFIG_MONGODB_PORT: ${MONGODB_LOCAL}
      # ME_CONFIG_MONGODB_ADMINUSERNAME: root
      # ME_CONFIG_MONGODB_ADMINPASSWORD: mongomed
    networks:
      meanstack_net:
        ipv4_address: 172.22.1.3

  mongo:
    image: mongo
    restart: always
    # environment:
    # MONGO_INITDB_ROOT_USERNAME: root
    # MONGO_INITDB_ROOT_PASSWORD: mongomed
    container_name: ${DBVIEWER_CONTAINER_NAME}
    ports:
      - "${MONGODB_LOCAL}:${MONGODB_CONTAINER}"
    networks:
      meanstack_net:
        ipv4_address: 172.22.1.4

networks:
  meanstack_net:
    ipam:
      driver: default
      config:
        - subnet: 172.22.0.0/16
